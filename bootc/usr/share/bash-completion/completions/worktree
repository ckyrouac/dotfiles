#!/bin/bash

_worktree_completions() {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="-d --delete -l --list -r --root -h --help"
    
    # Get current project name
    local project_name
    local current_path=$(pwd)
    if [[ $current_path =~ /projects/([^/]+) ]]; then
        project_name="${BASH_REMATCH[1]}"
    elif [[ $current_path =~ /worktrees/([^/]+) ]]; then
        project_name="${BASH_REMATCH[1]}"
    else
        return 0
    fi
    
    # Get existing worktree names
    local worktrees=()
    
    # Get git worktrees
    if git worktree list 2>/dev/null | grep -q "$HOME/worktrees/$project_name/"; then
        while IFS= read -r line; do
            if [[ $line =~ $HOME/worktrees/$project_name/([^[:space:]]+) ]]; then
                worktrees+=("${BASH_REMATCH[1]}")
            fi
        done < <(git worktree list 2>/dev/null)
    fi
    
    # Get tmux sessions that might not have corresponding git worktrees
    if tmux list-sessions 2>/dev/null | grep -q "^$project_name/"; then
        while IFS= read -r line; do
            if [[ $line =~ ^$project_name/([^:]+): ]]; then
                local session_name="${BASH_REMATCH[1]}"
                # Add to worktrees if not already there
                if [[ ! " ${worktrees[@]} " =~ " ${session_name} " ]]; then
                    worktrees+=("$session_name")
                fi
            fi
        done < <(tmux list-sessions 2>/dev/null)
    fi
    
    case "$prev" in
        -d|--delete)
            # Complete with existing worktree names for delete
            COMPREPLY=($(compgen -W "${worktrees[*]}" -- "$cur"))
            return 0
            ;;
        -l|--list|-r|--root|-h|--help)
            # These options don't take arguments
            return 0
            ;;
        *)
            # Check if we already have a flag
            local has_flag=false
            for word in "${COMP_WORDS[@]:1:$COMP_CWORD-1}"; do
                if [[ "$word" =~ ^- ]]; then
                    has_flag=true
                    break
                fi
            done
            
            if [[ "$cur" == -* ]]; then
                # Complete with options
                COMPREPLY=($(compgen -W "$opts" -- "$cur"))
            elif [[ "$has_flag" == false ]]; then
                # Complete with existing worktree names (for switching) or allow new names
                COMPREPLY=($(compgen -W "${worktrees[*]}" -- "$cur"))
            fi
            return 0
            ;;
    esac
}

complete -F _worktree_completions worktree
